{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\n\nvar A = function A(props) {\n  console.log(props);\n  var router = props.router;\n  return __jsx(\"div\", null, \"A \", router.query.id);\n};\n\n_c = A;\n\nA.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var req, query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req, query = _ref.query;\n            return _context.abrupt(\"return\", {\n              query: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(A);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"A\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zsm/Documents/project/React/react-next-github/pages/a.js"],"names":["withRouter","A","props","console","log","router","query","id","getInitialProps","req"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAEA,IAAMC,CAAC,GAAG,SAAJA,CAAI,CAACC,KAAD,EAAW;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADmB,MAEXG,MAFW,GAEAH,KAFA,CAEXG,MAFW;AAGnB,SAAQ,yBAAQA,MAAM,CAACC,KAAP,CAAaC,EAArB,CAAR;AACD,CAJD;;KAAMN,C;;AAMNA,CAAC,CAACO,eAAF;AAAA,uEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT,EAAcH,KAAd,QAAcA,KAAd;AAAA,6CAA2B;AAAEA,cAAAA,KAAK,EAALA;AAAF,aAA3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;AAEA,qBAAeN,UAAU,CAACC,CAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\n\nconst A = (props) => {\n  console.log(props);\n  const { router } = props;\n  return (<div>A {router.query.id}</div>);\n};\n\nA.getInitialProps = async ({ req, query }) => ({ query });\n\nexport default withRouter(A);\n"]},"metadata":{},"sourceType":"module"}