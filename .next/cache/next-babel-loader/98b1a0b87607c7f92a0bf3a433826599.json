{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\n\nvar A = function A(props) {\n  console.log('A props', props);\n  var query = props.query,\n      name = props.name;\n  return __jsx(\"div\", null, \"A \", query.id, \" \", name);\n};\n\n_c = A;\n\nA.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _ctx$ctx, req, query, promise, ret;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // console.log('ctx', ctx.ctx);\n            _ctx$ctx = ctx.ctx, req = _ctx$ctx.req, query = _ctx$ctx.query;\n            console.log('query', ctx.ctx.query);\n            promise = new Promise(function (resolve) {\n              setTimeout(function () {\n                resolve({\n                  query: query,\n                  name: 'jock lili'\n                });\n              }, 1000);\n            });\n            _context.next = 5;\n            return promise;\n\n          case 5:\n            ret = _context.sent;\n            return _context.abrupt(\"return\", ret);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(A); // ctx { err: undefined,\n//   req:\n//    IncomingMessage {\n//      _readableState:\n//       ReadableState {\n//         objectMode: false,\n//         highWaterMark: 16384,\n//         buffer: BufferList { head: null, tail: null, length: 0 },\n//         length: 0,\n//         pipes: null,\n//         pipesCount: 0,\n//         flowing: null,\n//         ended: true,\n//         endEmitted: false,\n//         reading: false,\n//         sync: true,\n//         needReadable: false,\n//         emittedReadable: true,\n//         readableListening: false,\n//         resumeScheduled: false,\n//         emitClose: true,\n//         destroyed: false,\n//         defaultEncoding: 'utf8',\n//         awaitDrain: 0,\n//         readingMore: true,\n//         decoder: null,\n//         encoding: null },\n//      readable: true,\n//      _events: {},\n//      _eventsCount: 0,\n//      _maxListeners: undefined,\n//      socket:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [ServerResponse],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      connection:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [ServerResponse],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      httpVersionMajor: 1,\n//      httpVersionMinor: 1,\n//      httpVersion: '1.1',\n//      complete: true,\n//      headers:\n//       { host: 'localhost:3000',\n//         connection: 'keep-alive',\n//         pragma: 'no-cache',\n//         'cache-control': 'no-cache',\n//         'user-agent':\n//          'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',\n//         accept: '*/*',\n//         'sec-fetch-site': 'same-origin',\n//         'sec-fetch-mode': 'cors',\n//         'sec-fetch-dest': 'empty',\n//         referer: 'http://localhost:3000/a/1',\n//         'accept-encoding': 'gzip, deflate, br',\n//         'accept-language': 'zh-CN,zh;q=0.9',\n//         cookie:\n//          '_ga=GA1.1.2001046471.1591882374; _gid=GA1.1.594421638.1593307036; _gat=1' },\n//      rawHeaders:\n//       [ 'Host',\n//         'localhost:3000',\n//         'Connection',\n//         'keep-alive',\n//         'Pragma',\n//         'no-cache',\n//         'Cache-Control',\n//         'no-cache',\n//         'User-Agent',\n//         'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',\n//         'Accept',\n//         '*/*',\n//         'Sec-Fetch-Site',\n//         'same-origin',\n//         'Sec-Fetch-Mode',\n//         'cors',\n//         'Sec-Fetch-Dest',\n//         'empty',\n//         'Referer',\n//         'http://localhost:3000/a/1',\n//         'Accept-Encoding',\n//         'gzip, deflate, br',\n//         'Accept-Language',\n//         'zh-CN,zh;q=0.9',\n//         'Cookie',\n//         '_ga=GA1.1.2001046471.1591882374; _gid=GA1.1.594421638.1593307036; _gat=1' ],\n//      trailers: {},\n//      rawTrailers: [],\n//      aborted: false,\n//      upgrade: false,\n//      url: '/a/1',\n//      method: 'GET',\n//      statusCode: null,\n//      statusMessage: null,\n//      client:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [ServerResponse],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      _consuming: false,\n//      _dumped: false,\n//      _parsedUrl:\n//       Url {\n//         protocol: null,\n//         slashes: null,\n//         auth: null,\n//         host: null,\n//         port: null,\n//         hostname: null,\n//         hash: null,\n//         search: null,\n//         query: null,\n//         pathname: '/a/1',\n//         path: '/a/1',\n//         href: '/a/1',\n//         _raw: '/a/1' } },\n//   res:\n//    ServerResponse {\n//      _events: { finish: [Array], end: [Function: onevent] },\n//      _eventsCount: 2,\n//      _maxListeners: undefined,\n//      output: [],\n//      outputEncodings: [],\n//      outputCallbacks: [],\n//      outputSize: 0,\n//      writable: true,\n//      _last: false,\n//      chunkedEncoding: false,\n//      shouldKeepAlive: true,\n//      useChunkedEncodingByDefault: true,\n//      sendDate: true,\n//      _removedConnection: false,\n//      _removedContLen: false,\n//      _removedTE: false,\n//      _contentLength: null,\n//      _hasBody: true,\n//      _trailer: '',\n//      finished: false,\n//      _headerSent: false,\n//      socket:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [Circular],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      connection:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [Circular],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      _header: null,\n//      _onPendingData: [Function: bound updateOutgoingData],\n//      _sent100: false,\n//      _expect_continue: false,\n//      statusCode: 200,\n//      __onFinished: { [Function: listener] queue: [Array] },\n//      locals: {},\n//      flush: [Function: flush],\n//      write: [Function: write],\n//      end: [Function: end],\n//      on: [Function: on],\n//      writeHead: [Function: writeHead],\n//      [Symbol(isCorked)]: false,\n//      [Symbol(outHeadersKey)]: null },\n//   pathname: '/a',\n//   query: { id: '1' },\n//   asPath: '/a/1',\n//   AppTree: [Function: AppTree] }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"A\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zsm/Documents/project/React/react-next-github/pages/a.js"],"names":["withRouter","A","props","console","log","query","name","id","getInitialProps","ctx","req","promise","Promise","resolve","setTimeout","ret"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAEA,IAAMC,CAAC,GAAG,SAAJA,CAAI,CAACC,KAAD,EAAW;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AADmB,MAEXG,KAFW,GAEKH,KAFL,CAEXG,KAFW;AAAA,MAEJC,IAFI,GAEKJ,KAFL,CAEJI,IAFI;AAGnB,SAAQ,yBAAQD,KAAK,CAACE,EAAd,OAAmBD,IAAnB,CAAR;AACD,CAJD;;KAAML,C;;AAMNA,CAAC,CAACO,eAAF;AAAA,sEAAoB,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClB;AADkB,uBAEKA,GAAG,CAACA,GAFT,EAEVC,GAFU,YAEVA,GAFU,EAELL,KAFK,YAELA,KAFK;AAGlBF,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,GAAG,CAACA,GAAJ,CAAQJ,KAA7B;AACMM,YAAAA,OAJY,GAIF,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvCC,cAAAA,UAAU,CAAC,YAAM;AACfD,gBAAAA,OAAO,CAAC;AACNR,kBAAAA,KAAK,EAALA,KADM;AAENC,kBAAAA,IAAI,EAAE;AAFA,iBAAD,CAAP;AAID,eALS,EAKP,IALO,CAAV;AAMD,aAPe,CAJE;AAAA;AAAA,mBAYAK,OAZA;;AAAA;AAYZI,YAAAA,GAZY;AAAA,6CAaXA,GAbW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;AAiBA,qBAAef,UAAU,CAACC,CAAD,CAAzsourcesContent":["import { withRouter } from 'next/router';\n\nconst A = (props) => {\n  console.log('A props', props);\n  const { query, name } = props;\n  return (<div>A {query.id} {name}</div>);\n};\n\nA.getInitialProps = async (ctx) => {\n  // console.log('ctx', ctx.ctx);\n  const { req, query } = ctx.ctx;\n  console.log('query', ctx.ctx.query);\n  const promise = new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        query,\n        name: 'jock lili',\n      });\n    }, 1000);\n  });\n  const ret = await promise;\n  return ret;\n  // return ({ query, name: 'jocky' });\n};\n\nexport default withRouter(A);\n\n// ctx { err: undefined,\n//   req:\n//    IncomingMessage {\n//      _readableState:\n//       ReadableState {\n//         objectMode: false,\n//         highWaterMark: 16384,\n//         buffer: BufferList { head: null, tail: null, length: 0 },\n//         length: 0,\n//         pipes: null,\n//         pipesCount: 0,\n//         flowing: null,\n//         ended: true,\n//         endEmitted: false,\n//         reading: false,\n//         sync: true,\n//         needReadable: false,\n//         emittedReadable: true,\n//         readableListening: false,\n//         resumeScheduled: false,\n//         emitClose: true,\n//         destroyed: false,\n//         defaultEncoding: 'utf8',\n//         awaitDrain: 0,\n//         readingMore: true,\n//         decoder: null,\n//         encoding: null },\n//      readable: true,\n//      _events: {},\n//      _eventsCount: 0,\n//      _maxListeners: undefined,\n//      socket:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [ServerResponse],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      connection:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [ServerResponse],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      httpVersionMajor: 1,\n//      httpVersionMinor: 1,\n//      httpVersion: '1.1',\n//      complete: true,\n//      headers:\n//       { host: 'localhost:3000',\n//         connection: 'keep-alive',\n//         pragma: 'no-cache',\n//         'cache-control': 'no-cache',\n//         'user-agent':\n//          'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',\n//         accept: '*/*',\n//         'sec-fetch-site': 'same-origin',\n//         'sec-fetch-mode': 'cors',\n//         'sec-fetch-dest': 'empty',\n//         referer: 'http://localhost:3000/a/1',\n//         'accept-encoding': 'gzip, deflate, br',\n//         'accept-language': 'zh-CN,zh;q=0.9',\n//         cookie:\n//          '_ga=GA1.1.2001046471.1591882374; _gid=GA1.1.594421638.1593307036; _gat=1' },\n//      rawHeaders:\n//       [ 'Host',\n//         'localhost:3000',\n//         'Connection',\n//         'keep-alive',\n//         'Pragma',\n//         'no-cache',\n//         'Cache-Control',\n//         'no-cache',\n//         'User-Agent',\n//         'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',\n//         'Accept',\n//         '*/*',\n//         'Sec-Fetch-Site',\n//         'same-origin',\n//         'Sec-Fetch-Mode',\n//         'cors',\n//         'Sec-Fetch-Dest',\n//         'empty',\n//         'Referer',\n//         'http://localhost:3000/a/1',\n//         'Accept-Encoding',\n//         'gzip, deflate, br',\n//         'Accept-Language',\n//         'zh-CN,zh;q=0.9',\n//         'Cookie',\n//         '_ga=GA1.1.2001046471.1591882374; _gid=GA1.1.594421638.1593307036; _gat=1' ],\n//      trailers: {},\n//      rawTrailers: [],\n//      aborted: false,\n//      upgrade: false,\n//      url: '/a/1',\n//      method: 'GET',\n//      statusCode: null,\n//      statusMessage: null,\n//      client:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [ServerResponse],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      _consuming: false,\n//      _dumped: false,\n//      _parsedUrl:\n//       Url {\n//         protocol: null,\n//         slashes: null,\n//         auth: null,\n//         host: null,\n//         port: null,\n//         hostname: null,\n//         hash: null,\n//         search: null,\n//         query: null,\n//         pathname: '/a/1',\n//         path: '/a/1',\n//         href: '/a/1',\n//         _raw: '/a/1' } },\n//   res:\n//    ServerResponse {\n//      _events: { finish: [Array], end: [Function: onevent] },\n//      _eventsCount: 2,\n//      _maxListeners: undefined,\n//      output: [],\n//      outputEncodings: [],\n//      outputCallbacks: [],\n//      outputSize: 0,\n//      writable: true,\n//      _last: false,\n//      chunkedEncoding: false,\n//      shouldKeepAlive: true,\n//      useChunkedEncodingByDefault: true,\n//      sendDate: true,\n//      _removedConnection: false,\n//      _removedContLen: false,\n//      _removedTE: false,\n//      _contentLength: null,\n//      _hasBody: true,\n//      _trailer: '',\n//      finished: false,\n//      _headerSent: false,\n//      socket:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [Circular],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      connection:\n//       Socket {\n//         connecting: false,\n//         _hadError: false,\n//         _handle: [TCP],\n//         _parent: null,\n//         _host: null,\n//         _readableState: [ReadableState],\n//         readable: true,\n//         _events: [Object],\n//         _eventsCount: 8,\n//         _maxListeners: undefined,\n//         _writableState: [WritableState],\n//         writable: true,\n//         allowHalfOpen: true,\n//         _sockname: null,\n//         _pendingData: null,\n//         _pendingEncoding: '',\n//         server: [Server],\n//         _server: [Server],\n//         timeout: 120000,\n//         parser: [HTTPParser],\n//         on: [Function: socketOnWrap],\n//         _paused: false,\n//         _httpMessage: [Circular],\n//         [Symbol(asyncId)]: 44780,\n//         [Symbol(lastWriteQueueSize)]: 0,\n//         [Symbol(timeout)]:\n//          Timeout {\n//            _called: false,\n//            _idleTimeout: 120000,\n//            _idlePrev: [TimersList],\n//            _idleNext: [Timeout],\n//            _idleStart: 41001,\n//            _onTimeout: [Function: bound ],\n//            _timerArgs: undefined,\n//            _repeat: null,\n//            _destroyed: false,\n//            [Symbol(unrefed)]: true,\n//            [Symbol(asyncId)]: 46301,\n//            [Symbol(triggerId)]: 44783 },\n//         [Symbol(kBytesRead)]: 0,\n//         [Symbol(kBytesWritten)]: 0 },\n//      _header: null,\n//      _onPendingData: [Function: bound updateOutgoingData],\n//      _sent100: false,\n//      _expect_continue: false,\n//      statusCode: 200,\n//      __onFinished: { [Function: listener] queue: [Array] },\n//      locals: {},\n//      flush: [Function: flush],\n//      write: [Function: write],\n//      end: [Function: end],\n//      on: [Function: on],\n//      writeHead: [Function: writeHead],\n//      [Symbol(isCorked)]: false,\n//      [Symbol(outHeadersKey)]: null },\n//   pathname: '/a',\n//   query: { id: '1' },\n//   asPath: '/a/1',\n//   AppTree: [Function: AppTree] }\n"]},"metadata":{},"sourceType":"module"}