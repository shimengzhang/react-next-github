{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\n\nfunction withLog(Comp) {\n  return props => {\n    console.log(props);\n    return __jsx(Comp, props);\n  };\n}\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => {\n        return originalRenderPage({\n          enhanceApp: App => props => sheet.collectStyles(__jsx(App, props))\n        });\n      };\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(Html, null, __jsx(Head, null, __jsx(\"style\", null, `.test {color: red}`)), __jsx(\"body\", {\n      className: \"test\"\n    }, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/zhangshimeng/Documents/project/React/react-next-github/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","withLog","Comp","props","console","log","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","collectStyles","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IACEC,IADF,EACQC,IADR,EACcC,IADd,EACoBC,UADpB,QAEO,eAFP;AAIA,SAAQC,gBAAR,QAAgC,mBAAhC;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAQC,KAAD,IAAU;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,MAAC,IAAD,EAAUA,KAAV,CAAP;AACD,GAHD;AAID;;AAED,MAAMG,UAAN,SAAyBX,QAAzB,CAAkC;AAEhC,eAAaY,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,IAAIT,gBAAJ,EAAd;AACA,UAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AACA,QAAG;AACDH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MAAK;AACpB,eAAOD,kBAAkB,CAAC;AACxBE,UAAAA,UAAU,EAAGC,GAAD,IAAUV,KAAD,IAASM,KAAK,CAACK,aAAN,CAAoB,MAAC,GAAD,EAASX,KAAT,CAApB;AADN,SAAD,CAAzB;AAGD,OAJD;;AAMA,YAAMY,YAAY,GAAG,MAAMpB,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACKO,YADL;AAEEC,QAAAA,MAAM,EACJ,4BACGD,YAAY,CAACC,MADhB,EAEGP,KAAK,CAACQ,eAAN,EAFH;AAHJ;AASD,KAjBD,SAiBS;AACPR,MAAAA,KAAK,CAACS,IAAN;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD,QACE,MAAC,IAAD,QACE,qBAAS,oBAAT,CADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAC;AAAhB,OACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CAJF,CADF;AAWD;;AAvC+B;;AA0ClC,eAAeb,UAAf","sourcesContent":["import Document, {\n  Html, Head, Main, NextScript,\n} from 'next/document';\n\nimport {ServerStyleSheet}  from 'styled-components'\n\nfunction withLog(Comp) {\n  return (props) =>{\n    console.log(props)\n    return <Comp {...props}></Comp>\n  }\n}\n\nclass MyDocument extends Document {\n  \n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet()\n    const originalRenderPage = ctx.renderPage\n    try{\n      ctx.renderPage = () =>{\n        return originalRenderPage({\n          enhanceApp: (App) => (props)=>sheet.collectStyles(<App {...props} />)\n        })\n      }\n      \n      const initialProps = await Document.getInitialProps(ctx)\n      return { \n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      }\n    } finally{\n      sheet.seal()\n    }\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head>\n          <style>{`.test {color: red}`}</style>\n        </Head>\n        <body className=\"test\">\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\nexport default MyDocument\n"]},"metadata":{},"sourceType":"module"}